name: Test

on: [push, pull_request]

jobs:
  tool:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch Flutter SDK
        run: |
          git clone --depth=1 https://github.com/flutter/flutter.git
          cd flutter
          git fetch --depth=1 https://github.com/flutter/flutter.git $(cat ../bin/internal/flutter.version)
          git checkout FETCH_HEAD
      - name: Run tests
        run: flutter/bin/flutter test --coverage
      - name: Report coverage
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y lcov
          lcov --summary coverage/lcov.info
          lcov --list coverage/lcov.info

  embedding:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.0.x'
      - name: Run tests
        run: dotnet test embedding/csharp

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: flutter-tizen
      - name: Install Tizen Studio
        run: |
          sudo apt install -y libncurses5 python2.7 libpython2.7 gettext
          curl http://download.tizen.org/sdk/Installer/tizen-studio_5.1/web-cli_Tizen_Studio_5.1_ubuntu-64.bin -o install.bin
          chmod a+x install.bin
          ./install.bin --accept-license $HOME/tizen-studio
          rm install.bin
      - name: Install Tizen Studio packages
        run: |
          $HOME/tizen-studio/package-manager/package-manager-cli.bin install \
            NativeToolchain-Gcc-9.2 \
            WEARABLE-5.5-NativeAppDevelopment
      - name: Create a Tizen certificate profile
        run: |
          export PATH=$PATH:$HOME/tizen-studio/tools/ide/bin
          tizen certificate -a tizen -p tizen -f tizen
          tizen security-profiles add \
            -n tizen \
            -a $HOME/tizen-studio-data/keystore/author/tizen.p12 \
            -p tizen
      - name: Set up flutter-tizen
        run: |
          export PATH=`pwd`/flutter-tizen/bin:$PATH
          echo $PATH >> $GITHUB_PATH
          flutter-tizen doctor -v
      - name: Build native TPK
        run: |
          flutter-tizen create --tizen-language cpp native_app
          cd native_app
          flutter-tizen build tpk -pwearable --debug
      - name: Build .NET TPK
        run: |
          flutter-tizen create --tizen-language csharp dotnet_app
          cd dotnet_app
          flutter-tizen build tpk -pwearable --debug
